# MineAdmin 开发环境 Docker Compose 配置
# 用于快速启动开发环境，无需K8s

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: mineadmin-mysql
    restart: unless-stopped
    env_file:
      - ../server-app/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
      TZ: ${TZ:-Asia/Shanghai}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./k8s/mysql-init-script:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - mineadmin-network

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: mineadmin-redis
    restart: unless-stopped
    env_file:
      - ../server-app/.env
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - mineadmin-network

  # 后端服务
  server-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.server-app
    container_name: mineadmin-server
    restart: unless-stopped
    user: root
    env_file:
      - ../server-app/.env
    environment:
      - TZ=${TZ:-Asia/Shanghai}
    ports:
      - "${SERVER_PORT:-9501}:9501"
      - "${SERVER_HTTP_PORT:-9502}:9502"
      - "${SERVER_GRPC_PORT:-9509}:9509"
    volumes:
      - server_storage:/storage
      - server_runtime:/runtime
      - server_logs:/logs
      - server_temp:/tmp
      # 映射宿主机的 .env 文件到容器
      - ../server-app/.env:/app/.env
      # 映射应用代码目录（以宿主机为主）
      - ../server-app/app:/app/app
      - ../server-app/config:/app/config
      - ../server-app/plugin:/app/plugin
      - ../server-app/tests:/app/tests
      - ../server-app/public:/app/public
      - ../server-app/storage:/app/storage
      - ../server-app/runtime:/app/runtime
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "MineAdmin.Master"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    networks:
      - mineadmin-network

  # 前端生产服务 - 使用nginx镜像，只映射dist目录
  web-prod:
    image: nginx:alpine
    container_name: mineadmin-web-prod
    restart: unless-stopped
    env_file:
      - ../server-app/.env
    environment:
      - TZ=${TZ:-Asia/Shanghai}
    ports:
      # 生产模式：只映射构建后的dist目录和nginx配置
      - "10000:80"
    volumes:
      # 生产模式：只映射构建后的dist目录和nginx配置
      - ../web/dist:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - web_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mineadmin-network

# 持久化存储卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  server_storage:
    driver: local
  server_runtime:
    driver: local
  server_logs:
    driver: local
  server_temp:
    driver: local
  web_logs:
    driver: local

# 网络配置 - 使用默认配置
networks:
  mineadmin-network:
    driver: bridge
